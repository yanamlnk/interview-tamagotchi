/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.2/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
    id 'com.github.spotbugs' version '5.1.0'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    //for JavaFX UI enhancements
    implementation 'org.openjfx:javafx-controls:20.0.1'
    implementation 'org.openjfx:javafx-graphics:20.0.1'
    implementation 'org.openjfx:javafx-base:20.0.1'
    implementation 'org.openjfx:javafx-fxml:20.0.1'

    //to work with json files
    implementation 'com.google.code.gson:gson:2.8.9'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'io.tamagotchi.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

//add JavaFX to run task
tasks.named('run') {
    // Configure JVM arguments for JavaFX
    jvmArgs = [
            '--module-path', sourceSets.main.runtimeClasspath.asPath,
            '--add-modules', 'javafx.controls,javafx.graphics'
    ]
}

// Add static analysis tool (SpotBugs)
spotbugs {
    toolVersion = '4.0.0'
    effort = 'max' // Set level of effort for analysis (e.g., max, default, min)
    reportLevel = 'high' // Report only high-level issues
}
