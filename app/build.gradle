/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.2/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'jacoco'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    //for JavaFX UI enhancements
    implementation 'org.openjfx:javafx-controls:17'
    implementation 'org.openjfx:javafx-graphics:17'
    implementation 'org.openjfx:javafx-base:17'
    implementation 'org.openjfx:javafx-fxml:17'

    //to work with json files
    implementation 'com.google.code.gson:gson:2.8.9'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'io.tamagotchi.App'
}

javafx {
    version = "17"
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.graphics', 'javafx.base' ] // Include modules you're using
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport

    testLogging {
        events "PASSED", "SKIPPED", "FAILED"
        exceptionFormat "full"
        showStandardStreams = true
    }
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

sourceSets.main.resources.srcDirs = ['src/main/resources']

